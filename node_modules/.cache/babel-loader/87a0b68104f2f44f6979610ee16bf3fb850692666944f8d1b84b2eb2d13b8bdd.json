{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactJs\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport About from './Components/About';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextEditor\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(TextForm, {\n            heading: \"Enter the text to analyze below\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vs8mkvwR7CZ7J6LLj80enWdttac=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextForm","About","BrowserRouter","Routes","Route","jsxDEV","_jsxDEV","App","_s","mode","setMode","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","heading","_c","$RefreshReg$"],"sources":["C:/ReactJs/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport './App.css';\n\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport About from './Components/About';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n\n\n\nfunction App() {\n\n  \n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n\n\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n     \n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n     \n    }\n  }\n  return (\n    <BrowserRouter>\n   <Routes>\n    <Navbar title=\"TextEditor\" mode={mode} toggleMode={toggleMode} />\n  \n        <div className=\"container my-3\">\n          <Route path=\"/about\"  element={<About />}  />\n              \n            \n          <Route path=\"/\"\n            element={<TextForm heading=\"Enter the text to analyze below\" mode={mode}/>}\n          />\n\n      \n        </div>\n      </Routes>\n    </BrowserRouter>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,WAAW;AAElB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKhE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAGb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAI3C,MAAMa,UAAU,GAAGA,CAAA,KAAI;IACrB,IAAGF,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;IAEjD,CAAC,MACG;MACFL,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAE/C;EACF,CAAC;EACD,oBACET,OAAA,CAACJ,aAAa;IAAAc,QAAA,eACfV,OAAA,CAACH,MAAM;MAAAa,QAAA,gBACNV,OAAA,CAACP,MAAM;QAACkB,KAAK,EAAC,YAAY;QAACR,IAAI,EAAEA,IAAK;QAACE,UAAU,EAAEA;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE7Df,OAAA;QAAKgB,SAAS,EAAC,gBAAgB;QAAAN,QAAA,gBAC7BV,OAAA,CAACF,KAAK;UAACmB,IAAI,EAAC,QAAQ;UAAEC,OAAO,eAAElB,OAAA,CAACL,KAAK;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAG7Cf,OAAA,CAACF,KAAK;UAACmB,IAAI,EAAC,GAAG;UACbC,OAAO,eAAElB,OAAA,CAACN,QAAQ;YAACyB,OAAO,EAAC,iCAAiC;YAAChB,IAAI,EAAEA;UAAK;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEpB;AAACb,EAAA,CArCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}